## Sprint 4

#### Teste de API:

- O que é uma API
- Como a arquitetura de um aplicativo com uma API e banco de dados é organizada
- Como testar uma API
- O que é a solução de arquitetura REST
- 
##### Você vai trabalhar nestas habilidades:

- Testes de Aplicativos Web.
- Deseing de Testes.
- Rastreamento de Bugs.


#### Introdução:

- Neste projeto, você vai testar a API do Urban.Grocers.

- Você vai precisar de todas as habilidades que aprendeu durante o sprint, como:

- Criar e enviar solicitações à API via Postman.
- Criar relatórios de bug.
- Ler a documentação da API.
- Criar os primeiros testes de API.
- Você também vai precisar do conhecimento teórico do teste de API:

- Estrutura HTTP.
- Formato JSON.
- REST.
- Técnicas de design de testes para API.

#### Deacrição do Projeto:

- Você vai testar a API. 
- Irá precisar colocar os resultados das tarefas no Google Docs e anexar o link na plataforma.
- Para ambas as tarefas, este modelo vai ser útil.

- Os desenvolvedores adicionaram um novo recurso API do Urban.Grocers, e uma nova versáo da API foi passada para você testar. Aqui estão os requisitos do back-end.
- Requisitos dos novos recursos
A nova funcionalidade cobre diversas áreas:

- ##### 1-Trabalho com kits:

- A capacidade de adicionar produtos a um kit. O endpoint é POST /api/v1/kits/{id}/products. Use a parte "Main.Kits" no apiDoc para mais informações. O endpoint vai retornar 400 Bad Request quando o comprimento da lista de produtos resultantes (não as quantidades cumulativas de cada produto) exceder 30.

- ##### 2-Trabalho com serviços de entrega:

- A capacidade de verificar se o serviço de entrega Order and Go está disponível e quanto custa. O endpoint é POST /order-and-go/v1/delivery. Consulte os requisitos na parte "Couriers" (Serviços de entrega)" do apiDoc e calcule o preço de envio.

#### Objetivo :

- Analisar os requisitos para a nova funcionalidade do back-end do Urban.Grocers. 
- Estude a documentação da API no Apidoc. Os requisitos do back-end estão aqui.
- Projetar os testes em um checklist para abordar as funcionalidades que precisam ser testadas.
- Você pode encontrá-la acima. Você não precisa testar a autorização.
- Colocar o checklist em uma planilha do Google. Crie uma cópia do modelo. Nas configurações de compartilhamento, escolha "Qualquer um com o link" → "Pode comentar".
- Testar a API através do Postman e enviar relatórios de bug ao Jira caso seja necessário.
- Os checklists estão bem organizados e os testes foram projetados minuciosamente.
- Os testes foram bem realizados e todas as verificações projetadas foram executadas.
-  Quais bugs foram detectados e relatados corretamente.




  ##### - Aplicativo utilizado  Urban.Grocers, Postman , Jira.

  ##### Planilhas : O modelo do Google Docs.


#### Janaina Vicentin

 ##### Projeto 4

https://docs.google.com/spreadsheets/d/1rO1u9nU9puADpxeMhIaK3azcc0za-2wL/edit?usp=sharing&ouid=116466800538018340671&rtpof=true&sd=true

### Conclusão:

- Neste projeto conclui ,um ótimo trabalho! Fui capaz de escrever checklists, casos de teste e encontrar bugs complicados.
- Ouve vários desafios, mas consegui passar por todos e entregar este projeto, junto com a equipe e meu tutor que sempre esteve ao meu lado me orientando.
- Fico feliz de compartilhar este que Projeto .
- Obrigado equipe Triple Ten.